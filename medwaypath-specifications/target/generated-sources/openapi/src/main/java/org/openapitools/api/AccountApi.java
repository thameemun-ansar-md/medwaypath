/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Account;
import org.openapitools.model.AccountNotFoundError;
import org.openapitools.model.DepositRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-03-16T13:51:40.105+05:30[Asia/Calcutta]")
@Validated
@Tag(name = "account", description = "Operations between bank accounts")
public interface AccountApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /account/deposit : Deposit amount to account
     * Initiates a deposit operation of a desired amount to the account specified
     *
     * @param depositRequest Account number and desired amount to deposit (required)
     * @return Success (status code 204)
     *         or Account not found (status code 404)
     */
    @Operation(
        operationId = "depositToAccount",
        summary = "Deposit amount to account",
        tags = { "accounts" },
        responses = {
            @ApiResponse(responseCode = "204", description = "Success"),
            @ApiResponse(responseCode = "404", description = "Account not found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AccountNotFoundError.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/account/deposit",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> depositToAccount(
        @Parameter(name = "DepositRequest", description = "Account number and desired amount to deposit", required = true) @Valid @RequestBody DepositRequest depositRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /account : Get account information
     * Get account information using account number
     *
     * @return Success (status code 200)
     *         or Account not found (status code 404)
     */
    @Operation(
        operationId = "getAccount",
        summary = "Get account information",
        tags = { "accounts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Account.class))
            }),
            @ApiResponse(responseCode = "404", description = "Account not found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AccountNotFoundError.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/account",
        produces = { "application/json" }
    )
    default ResponseEntity<Account> getAccount(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"balance\" : 0.8008281904610115 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
